apiVersion: batch/v1
kind: Job
metadata:
  name: playwright-merge-reports-__RUN_ID__
  namespace: playwright
  annotations:
    "argocd.argoproj.io/hook": PostSync
    "argocd.argoproj.io/hook-delete-policy": HookSucceeded
  # annotations: # This should help recreate the job
  #   "argocd.argoproj.io/hook": PreSync
  #   "argocd.argoproj.io/hook-delete-policy": HookSucceeded

spec:
  ttlSecondsAfterFinished: 60  # Keep the Job object for 1 minutes (60 seconds) after completion
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: merge
        image: mcr.microsoft.com/playwright:v1.52.0-noble
        command: ["/bin/sh", "-c"]
        args:
          - |
            set -e
            echo "[Merge Job] Waiting for test results to be available..."

            MAX_WAIT=300
            WAIT_INTERVAL=10
            WAITED=0

            while true; do
              COUNT=$(ls -d /results/${RUN_ID}/*/ 2>/dev/null | wc -l)
              if [ "$COUNT" -ge "$EXPECTED_SHARDS" ]; then
                echo "[Merge Job] Found $COUNT result directories."
                break
              fi

              if [ "$WAITED" -ge "$MAX_WAIT" ]; then
                echo "[Merge Job] Timeout waiting for result directories."
                exit 1
              fi

              echo "[Merge Job] Waiting... ($WAITED/$MAX_WAIT seconds)"
              sleep $WAIT_INTERVAL
              WAITED=$((WAITED + WAIT_INTERVAL))
            done

            echo "[Merge Job] Merging reports..."

            npx playwright merge-reports /results/__RUN_ID__/*/ --reporter html
            mkdir -p /results/__RUN_ID__/final
            cp -r /results/__RUN_ID__/*/*.json /results/__RUN_ID__/final/
            
            echo "[Merge Job] Merge complete."

        env:
        - name: RUN_ID
          value: __RUN_ID__
        - name: EXPECTED_SHARDS
          value: "3"  # Adjust this to match your test job parallelism/shard count
        volumeMounts:
        - name: results
          mountPath: /results
      volumes:
      - name: results
        persistentVolumeClaim:
          claimName: results-pvc
